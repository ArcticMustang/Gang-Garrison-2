<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">ini_open("gg2.ini");
global.timeLimitMins = ini_read_real("Server", "Time Limit", 15);
global.caplimit = ini_read_real("Server", "CapLimit", 5);
global.Server_RespawntimeSec = ini_read_real("Server", "Respawn Time", 5);
ini_close();

//Server respawn time calculator. Converts each second to a frame. (read: multiply by 30 :hehe:)
if (global.Server_RespawntimeSec == 0)
{
    global.Server_Respawntime = 1;
}    
else
{
    global.Server_Respawntime = global.Server_RespawntimeSec * 30;    
}

menu_create(self, 40, 200, 300, 200, 30);
menu_settimeout(self, 15);

menu_addedit_text2(self, "Server Name:", global.serverName, '
    global.serverName = argument0;
    if(string_length(global.serverName)&gt;25) global.serverName = string_copy(global.serverName, 0, 25);
    if string_count("#",global.serverName) &gt; 0 {
        show_message("Invalid character ' + "'\#'" + ' in server name");
        global.serverName = "I &lt;3 Bacon";
    }
    ini_open("gg2.ini");
    ini_write_string("Server", "ServerName", global.serverName);
    ini_close();
    return global.serverName;
');
menu_addedit_text(self, "Password:", global.serverPassword, '
    global.serverPassword = argument0;
    ini_open("gg2.ini");
    ini_write_string("Server", "Password", global.serverPassword);
    ini_close();
');
menu_addedit_num(self, "Hosting Port:", global.hostingPort, '
    global.hostingPort = argument0;
    ini_open("gg2.ini");
    ini_write_real("Settings", "HostingPort", global.hostingPort);
    ini_close();
');
menu_addedit_num(self, "Player Limit:", global.playerLimit, '
    global.playerLimit = argument0;
    ini_open("gg2.ini");
    ini_write_real("Settings", "PlayerLimit", global.playerLimit);
    ini_close();
');
menu_addedit_num(self, "Time Limit (mins):", global.timeLimitMins, '
    global.timeLimitMins = argument0;
    ini_open("gg2.ini");
    ini_write_real("Server", "Time Limit", global.timeLimitMins);
    ini_close();
');
menu_addedit_num(self, "Capture Limit:", global.caplimit, '
    global.caplimit = argument0;
    ini_open("gg2.ini");
    ini_write_real("Server", "CapLimit", global.caplimit);
    ini_close();
');
menu_addedit_num(self, "Respawn Time (secs):", global.Server_RespawntimeSec, '
    global.Server_RespawntimeSec = argument0;
    ini_open("gg2.ini");
    ini_write_real("Server", "Respawn Time", global.Server_RespawntimeSec);
    ini_close();
');
menu_addedit_boolean(self, "Auto Balance:", global.autobalance, '
    global.autobalance = argument0;
    ini_open("gg2.ini");
    ini_write_real("Server", "AutoBalance", global.autobalance);
    ini_close();
');
menu_addedit_boolean(self, "Announce to Lobby:", global.useLobbyServer, '
    global.useLobbyServer = argument0;
    ini_open("gg2.ini");
    ini_write_real("Settings", "UseLobby", global.useLobbyServer);
    ini_close();
');
menu_addlink(self, "Start Game", '
    //Server respawn time calculator. Converts each second to a frame. (read: multiply by 30 :hehe:)
    if (global.Server_RespawntimeSec == 0)
    {
        global.Server_Respawntime = 1;
    }    
    else
    {
        global.Server_Respawntime = global.Server_RespawntimeSec * 30;    
    }
    
    global.gameServer = instance_create(0,0,GameServer);
');
menu_addlink(self, "Back", '
    event_user(10);
');
</argument>
      </arguments>
    </action>
  </actions>
</event>
